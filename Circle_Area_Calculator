import components.simplereader.SimpleReader;
import components.simplereader.SimpleReader1L;
import components.simplewriter.SimpleWriter;
import components.simplewriter.SimpleWriter1L;

/**
 * Put a short phrase describing the program here.
 *
 * @author Put your name here
 *
 */
public final class Circle_Area_Calculator {

    /**
     * No argument constructor--private to prevent instantiation.
     */
    private Circle_Area_Calculator() {
    }

    /**
     * Put a short phrase describing the static method myMethod here.
     */
    /**
     * Checks whether the given point (xCoord, yCoord) is inside the circle of
     * radius 1.0 centered at the point (1.0, 1.0).
     *
     * @param xCoord
     *            the x coordinate of the point
     * @param yCoord
     *            the y coordinate of the point
     * @return true if the point is inside the circle, false otherwise
     */
    private static boolean pointIsInCircle(double xCoord, double yCoord) {
        boolean within = true;
        if ((Math.sqrt((1 - xCoord) * (1 - xCoord) + (1 - yCoord) * (1 - yCoord))) <= 1) {
            return (within);
        } else {
            within = false;
            return (within);
        }
    }

    /**
     * Generates n pseudo-random points in the [0.0,2.0) x [0.0,2.0) square and
     * returns the number that fall in the circle of radius 1.0 centered at the
     * point (1.0, 1.0).
     *
     * @param n
     *            the number of points to generate
     * @return the number of points that fall in the circle
     */
    private static int numberOfPointsInCircle(int n) {
        int counter = 0;
        int m = n;
        while (m > 0) {
            if (pointIsInCircle(Math.random() * 2, Math.random() * 2)) {
                counter++;
            }
            m = m - 1;
        }
        return counter;
    }

    /**
     * Main method.
     *
     * @param args
     *            the command line arguments
     */
    public static void main(String[] args) {
        /*
         * Open input and output streams
         */
        SimpleReader input = new SimpleReader1L();
        SimpleWriter output = new SimpleWriter1L();
        /*
         * Ask user for number of points to generate
         */
        output.print("Number of points: ");
        int n = input.nextInteger();
        double rat = n;
        int numba = numberOfPointsInCircle(n);

        /*
         * Estimate percentage of points generated in [0.0,1.0) interval that
         * fall in the [0.0,0.5) subinterval
         */
        double within = (numba / rat) * 100;
        output.println("Estimate of percentage: " + within + "%");
        /*
         * Close input and output streams
         */
        input.close();
        output.close();
    }

}
